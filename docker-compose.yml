version: '3.9'
services:
  zookepeer:
    hostname: zookepeer.local
    container_name: zookepeer
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    env_file:
      - .env
    networks:
      - local_dev

  kafka-broker-1:
    container_name: kafka-broker-1
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1.local
    depends_on:
      - zookepeer
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookepeer.local:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      AUTO_CREATE_TOPICS: true
    env_file:
      - .env
    networks:
      - local_dev

  nifi:
    hostname: nifi.local
    container_name: nifi_persistent
    build:
        context: ./init/nifi
        dockerfile: Dockerfile
    depends_on:
        - kafka-broker-1
        - postgres
    restart: on-failure
    ports:
        - '8091:8091'
    environment:
        - NIFI_WEB_HTTPS_HOST=0.0.0.0
        - NIFI_WEB_HTTPS_PORT=8091
        - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
    healthcheck:
        test: ["CMD", "bin/nifi.sh",  "status", "| grep -i running"]
        interval: "60s"
        timeout: "3s"
        start_period: "5s"
        retries: 5
    volumes:
        - ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
        - ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
        - ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
        - ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
        - ./nifi/state:/opt/nifi/nifi-current/state
        - ./nifi/logs:/opt/nifi/nifi-current/logs
        - ./nifi/conf:/opt/nifi/nifi-current/persists-conf
    networks:
      - local_dev

  postgres:
    hostname: postgres.local
    container_name: postgres
    image: postgres:16.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./init/db:/docker-entrypoint-initdb.d
    networks:
      - local_dev
      
networks:
  local_dev:
    driver: bridge